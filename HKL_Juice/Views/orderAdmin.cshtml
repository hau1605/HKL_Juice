<!DOCTYPE html>
<html lang="en">

<head>
    <title>HKL Juice Admin</title>

    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="description" content="HKL Juice Admin">
    <link rel="shortcut icon" href="~/Content/assets/images/HKL_logo.png">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>


    <!-- FontAwesome JS-->
    <script defer src="~/Content/assets/plugins/fontawesome/js/all.min.js"></script>

    <!-- App CSS -->
    <link id="theme-style" rel="stylesheet" href="~/Content/assets/css/portal.css">

</head>

<body class="app">
    <header class="app-header fixed-top">
        <div class="app-header-inner">
            <div class="container-fluid py-2">
                <div class="app-header-content">
                    <div class="row justify-content-between align-items-center">

                        <div class="col-auto">
                            <a id="sidepanel-toggler" class="sidepanel-toggler d-inline-block d-xl-none" href="#">
                                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30"
                                     role="img">
                                    <title>Menu</title>
                                    <path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10"
                                          stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path>
                                </svg>
                            </a>
                        </div><!--//col-->
                        <div class="app-utilities col-auto">
                            <div class="app-utility-item app-user-dropdown dropdown">
                                <a class="dropdown-toggle" id="user-dropdown-toggle" data-bs-toggle="dropdown" href="#"
                                   role="button" aria-expanded="false">
                                    <img style="border-radius: 50%;box-shadow:0 0 2px gray;" id="imgLoginUser"
                                         alt="user profile">
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="user-dropdown-toggle">
                                    <li><a class="dropdown-item" href="/admin/account">Tài khoản</a></li>
                                    <li>
                                        <hr class="dropdown-divider">
                                    </li>
                                    <li><a class="dropdown-item" href="/admin/login" onclick="localStorage.removeItem('loginUser')">Đăng xuất</a></li>
                                </ul>
                            </div><!--//app-user-dropdown-->
                        </div><!--//app-utilities-->
                    </div><!--//row-->
                </div><!--//app-header-content-->
            </div><!--//container-fluid-->
        </div><!--//app-header-inner-->

        <div id="app-sidepanel" class="app-sidepanel">
            <div id="sidepanel-drop" class="sidepanel-drop"></div>
            <div class="sidepanel-inner d-flex flex-column">
                <a href="#" id="sidepanel-close" class="sidepanel-close d-xl-none">&times;</a>
                <div class="app-branding">
                    <a class="app-logo" href="/admin">
                        <img style="height: 50px;width:55px;" class="logo-icon me-2"
                             src="~/Content/assets/images/HKL_logo.png" alt="logo"><span class="logo-text">HKL Juice</span>
                    </a>

                </div><!--//app-branding-->

                <nav id="app-nav-main" class="app-nav app-nav-main flex-grow-1">
                    <ul class="app-menu list-unstyled accordion" id="menu-accordion">
                        <li class="nav-item">
                            <!--//Bootstrap Icons: https://icons.getbootstrap.com/ -->
                            <a class="nav-link" href="/admin">
                                <span class="nav-icon">
                                    <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-house-door"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                              d="M7.646 1.146a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 .146.354v7a.5.5 0 0 1-.5.5H9.5a.5.5 0 0 1-.5-.5v-4H7v4a.5.5 0 0 1-.5.5H2a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .146-.354l6-6zM2.5 7.707V14H6v-4a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4h3.5V7.707L8 2.207l-5.5 5.5z" />
                                        <path fill-rule="evenodd"
                                              d="M13 2.5V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z" />
                                    </svg>
                                </span>
                                <span class="nav-link-text">Tổng quan</span>
                            </a><!--//nav-link-->
                        </li><!--//nav-item-->

                        <li class="nav-item">
                            <!--//Bootstrap Icons: https://icons.getbootstrap.com/ -->
                            <a class="nav-link  active" href="#">
                                <span class="nav-icon">
                                    <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-card-list"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                              d="M14.5 3h-13a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5zm-13-1A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13z" />
                                        <path fill-rule="evenodd"
                                              d="M5 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 5 8zm0-2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5z" />
                                        <circle cx="3.5" cy="5.5" r=".5" />
                                        <circle cx="3.5" cy="8" r=".5" />
                                        <circle cx="3.5" cy="10.5" r=".5" />
                                    </svg>
                                </span>
                                <span class="nav-link-text">Hóa đơn</span>
                            </a><!--//nav-link-->
                        </li><!--//nav-item-->
                        <li class="nav-item">
                            <!--//Bootstrap Icons: https://icons.getbootstrap.com/ -->
                            <a class="nav-link " href="/admin/products">
                                <span class="nav-icon">
                                    <svg width="256px" height="256px" viewBox="0 0 512 512" class="bi bi-card-list"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg" stroke="#000000"
                                         stroke-width="36.864">
                                        <g id="SVGRepo_iconCarrier">
                                            <defs />
                                            <g id="Layer-2" xmlns:vectornator="http://vectornator.io">
                                                <path d="M83.9375 31C79.6383 31 76.1562 34.4821 76.1562 38.7812C76.1562 43.0804 79.6383 46.5625 83.9375 46.5625L150.844 46.5625L168.312 87.7188L133.562 87.7188C129.263 87.7188 125.781 91.2008 125.781 95.5L125.781 249.906C125.781 321.504 179.235 379.975 246.812 384.188L246.812 465.438L177.25 465.438C172.951 465.438 169.469 468.92 169.469 473.219C169.469 477.518 172.951 481 177.25 481L331.906 481C336.205 481 339.687 477.518 339.688 473.219C339.688 468.92 336.205 465.438 331.906 465.438L262.375 465.438L262.375 384.188C329.936 379.942 383.406 321.471 383.406 249.906L383.406 169.562C383.407 169.507 383.438 169.462 383.438 169.406C383.438 169.351 383.407 169.305 383.406 169.25L383.406 156.562C412.998 152.643 435.813 126.828 435.844 95.5625C435.844 95.5412 435.844 95.5213 435.844 95.5C435.844 61.5033 408.91 33.8437 375.594 33.8438C344.862 33.8438 319.645 57.3868 315.906 87.7188L185.219 87.7188L163.188 35.75C162.806 34.8491 162.234 34.1025 161.594 33.4375C161.474 33.3117 161.347 33.2113 161.219 33.0938C160.653 32.578 160.026 32.1388 159.344 31.8125C159.157 31.7228 158.976 31.6374 158.781 31.5625C157.892 31.2206 156.967 30.9993 156 31L83.9375 31ZM367.812 50.25L367.812 76.5312L349.531 58.25C354.876 54.2622 361.061 51.482 367.812 50.25ZM383.406 50.25C390.149 51.4811 396.347 54.2381 401.688 58.2188L383.406 76.5L383.406 50.25ZM338.75 69.5L356.969 87.7188L331.688 87.7188C332.79 81.0526 335.191 74.8564 338.75 69.5ZM412.438 69.5C416.007 74.8683 418.43 81.0655 419.531 87.75C413.748 87.7388 404.918 87.7226 394.188 87.7188L412.438 69.5ZM141.344 103.281C143.487 103.281 165.913 103.281 174.906 103.281L199.625 161.625L141.344 161.625L141.344 103.281ZM191.812 103.281C236.937 103.281 280.994 103.281 323.031 103.281C323.086 103.282 323.132 103.313 323.188 103.312L367.812 103.312L367.812 149.344L367.812 161.625L216.562 161.625L191.812 103.281ZM394.562 103.312L419.531 103.312C418.436 109.888 416.083 116.041 412.594 121.344L394.562 103.312ZM383.406 114.156L401.875 132.625C396.492 136.684 390.231 139.504 383.406 140.75L383.406 114.156ZM141.344 177.188L367.812 177.188L367.812 249.906C367.812 315.785 317.023 369.031 254.562 369.031C192.116 369.031 141.344 315.799 141.344 249.906L141.344 177.188ZM165.844 236.156C161.545 236.156 158.063 239.638 158.062 243.938C158.063 302.968 203.802 350.969 260.438 350.969C264.737 350.969 268.219 347.487 268.219 343.188C268.219 338.888 264.737 335.406 260.438 335.406C212.572 335.406 173.625 294.533 173.625 243.938C173.625 239.638 170.143 236.156 165.844 236.156Z"
                                                      fill-rule="evenodd" opacity="1" stroke="none"
                                                      xmlns:vectornator="http://vectornator.io" />
                                            </g>
                                        </g>
                                    </svg>
                                </span>
                                <span class="nav-link-text">Sản phẩm</span>
                            </a><!--//nav-link-->
                        </li><!--//nav-item-->
                        <li class="nav-item" id="user_nav">

                        </li>
                        <li class="nav-item">
                            <!--//Bootstrap Icons: https://icons.getbootstrap.com/ -->
                            <a class="nav-link " href="/admin/categories">
                                <span class="nav-icon">
                                    <svg width="800px" height="800px" viewBox="0 0 64 64" class="bi bi-card-list"
                                         version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/"
                                         style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;"
                                         fill="currentColor" xmlns="http://www.w3.org/2000/svg"
                                         stroke-width="36.864">
                                    <rect id="Icons" x="-384" y="-320" width="1280" height="800"
                                          style="fill:none;" />
                                    <g id="Icons1" serif:id="Icons">										
                                    <g>
                                    <path d="M9.89,30.496c-1.14,1.122 -1.784,2.653 -1.791,4.252c-0.006,1.599 0.627,3.135 1.758,4.266c3.028,3.028 7.071,7.071 10.081,10.082c2.327,2.326 6.093,2.349 8.448,0.051c5.91,-5.768 16.235,-15.846 19.334,-18.871c0.578,-0.564 0.905,-1.338 0.905,-2.146c0,-4.228 0,-17.607 0,-17.607l-17.22,0c-0.788,0 -1.544,0.309 -2.105,0.862c-3.065,3.018 -13.447,13.239 -19.41,19.111Zm34.735,-15.973l0,11.945c0,0.811 -0.329,1.587 -0.91,2.152c-3.069,2.981 -13.093,12.718 -17.485,16.984c-1.161,1.127 -3.012,1.114 -4.157,-0.031c-2.387,-2.386 -6.296,-6.296 -8.709,-8.709c-0.562,-0.562 -0.876,-1.325 -0.872,-2.12c0.003,-0.795 0.324,-1.555 0.892,-2.112c4.455,-4.373 14.545,-14.278 17.573,-17.25c0.561,-0.551 1.316,-0.859 2.102,-0.859c3.202,0 11.566,0 11.566,0Zm-7.907,2.462c-1.751,0.015 -3.45,1.017 -4.266,2.553c-0.708,1.331 -0.75,2.987 -0.118,4.356c0.836,1.812 2.851,3.021 4.882,2.809c2.042,-0.212 3.899,-1.835 4.304,-3.896c0.296,-1.503 -0.162,-3.136 -1.213,-4.251c-0.899,-0.953 -2.18,-1.548 -3.495,-1.57c-0.031,-0.001 -0.062,-0.001 -0.094,-0.001Zm0.008,2.519c1.105,0.007 2.142,0.849 2.343,1.961c0.069,0.384 0.043,0.786 -0.09,1.154c-0.393,1.079 -1.62,1.811 -2.764,1.536c-1.139,-0.274 -1.997,-1.489 -1.802,-2.67c0.177,-1.069 1.146,-1.963 2.27,-1.981c0.014,0 0.029,0 0.043,0Z" />
                                    <path d="M48.625,13.137l0,4.001l3.362,0l0,11.945c0,0.811 -0.328,1.587 -0.909,2.152c-3.069,2.981 -13.093,12.717 -17.485,16.983c-1.161,1.128 -3.013,1.114 -4.157,-0.03l-0.034,-0.034l-1.016,0.993c-0.663,0.646 -1.437,1.109 -2.259,1.389l1.174,1.174c2.327,2.327 6.093,2.35 8.447,0.051c5.91,-5.768 16.235,-15.845 19.335,-18.87c0.578,-0.565 0.904,-1.339 0.904,-2.147c0,-4.227 0,-17.607 0,-17.607l-7.362,0Z" />
											</g>
                                    <g id="spinner--loading--dots-" serif:id="spinner [loading, dots]">
											</g>
										</g>
									</svg>
                                </span>
                                <span class="nav-link-text">Danh mục</span>
                            </a><!--//nav-link-->
                        </li><!--//nav-item-->

                       

                    </ul><!--//app-menu-->
                </nav><!--//app-nav-->


            </div><!--//sidepanel-inner-->
        </div><!--//app-sidepanel-->
    </header><!--//app-header-->

    <div class="app-wrapper">

        <div class="app-content pt-3 p-md-3 p-lg-4">
            <div class="container-xl">
                <div class="row g-3 mb-4 align-items-start justify-content-between">
                    <div class="col-auto">
                        <h1 class="app-page-title mb-0">Hóa đơn</h1>
                    </div>
                    <!-- Top main -->
                    <div class="col-auto">
                        <div class="page-utilities">
                            <div class="row g-2 gy-2 justify-content-start justify-content-md-end align-items-center">
                                <div class="col-auto">
                                    <form class="table-search-form row gx-2 align-items-center" id="searchForm">
                                        <div class="col-auto my-2">
                                            <div class="col-auto my-1">
                                                <input type="text" id="order-id" name="searchorders"
                                                       class="form-control search-orders" placeholder="Nhập mã hóa đơn">
                                            </div>
                                            <div class="col-auto my-1">
                                                <input type="text" id="table-number" name="tablenumber"
                                                       class="form-control" placeholder="Số bàn">
                                            </div>
                                        </div>

                                        <div class="col-auto">
                                            <div class="col-auto my-2">
                                                <div class="col-auto my-1">
                                                    <input type="text" id="employee-name" name="employeename"
                                                           class="form-control" placeholder="Tên nhân viên">
                                                </div>
                                                <div class="col-auto my-1">
                                                    <input type="date" id="order-date" name="orderdate"
                                                           class="form-control" placeholder="Ngày">
                                                </div>
                                            </div>
                                        </div>



                                        <div class="col-auto">
                                            <button type="submit" class="btn app-btn-primary">Tìm</button>
                                        </div>
                                    </form>
                                </div><!--//col-->
                                <div class="col-auto">
                                    <select class="form-select w-auto">
                                        <option selected value="option-1">Tất cả</option>
                                        <option value="option-2">Tuần này</option>
                                        <option value="option-3">Tháng này</option>
                                        <option value="option-4">Năm này</option>
                                    </select>
                                </div>
                                <div class="col-auto">
                                    <a id="downloadExcel" class="btn app-btn-secondary" href="#">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-download me-1"
                                             fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd"
                                                  d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                                            <path fill-rule="evenodd"
                                                  d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z" />
                                        </svg>
                                        Tải file Excel
                                    </a>
                                </div>
                            </div><!--//row-->
                        </div><!--//table-utilities-->
                    </div>
                </div>

                <!-- filter -->
                <nav id="orders-table-tab"
                     class="orders-table-tab app-nav-tabs nav shadow-sm flex-column flex-sm-row mb-4">
                    <a class="flex-sm-fill text-sm-center nav-link active" id="orders-all-tab" data-bs-toggle="tab"
                       href="#orders-all" role="tab" aria-controls="orders-all" aria-selected="true">Tất cả</a>
                    <a class="flex-sm-fill text-sm-center nav-link" id="orders-paid-tab" data-bs-toggle="tab"
                       href="#orders-paid" role="tab" aria-controls="orders-paid" aria-selected="false">
                        Đã thanh
                        toán
                    </a>
                    <a class="flex-sm-fill text-sm-center nav-link" id="orders-pending-tab" data-bs-toggle="tab"
                       href="#orders-pending" role="tab" aria-controls="orders-pending" aria-selected="false">
                        Đang
                        chờ
                    </a>
                    <a class="flex-sm-fill text-sm-center nav-link" id="orders-cancelled-tab" data-bs-toggle="tab"
                       href="#orders-cancelled" role="tab" aria-controls="orders-cancelled" aria-selected="false">
                        Đã
                        hủy
                    </a>
                </nav>

                <!-- Table -->
                <div class="tab-content">
                    <div role="tabpanel" aria-labelledby="orders-all-tab">
                        <div class="app-card app-card-orders-table shadow-sm mb-5">
                            <div class="app-card-body">
                                <div class="table-responsive">
                                    <!-- id="ordersTable" -->
                                    <table style="text-align: center;" id="ordersTable"
                                           class="table app-table-hover mb-0 text-left">
                                        <thead>
                                            <tr>
                                                <th class="cell">STT</th>
                                                <th class="cell">ID</th>
                                                <th class="cell"></th>
                                                <th class="cell">Hóa đơn</th>
                                                <th class="cell">Số bàn</th>
                                                <th class="cell">Nhân viên</th>
                                                <th class="cell">Ngày</th>
                                                <th class="cell">Trạng thái</th>
                                                <th class="cell">Tổng tiền</th>
                                                <th class="cell">Hành động</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div><!--//table-responsive-->
                            </div><!--//app-card-body-->
                        </div><!--//app-card-->
                        <!-- Phan trang -->
                        <nav class="app-pagination">
                            <ul class="pagination justify-content-center" id="pagination">
                                <li class="page-item" id="previousPage">
                                    <a style="cursor: pointer;" class="page-link">Trước</a>
                                </li>
                                <!-- Các nút trang sẽ được thêm vào đây bằng JavaScript -->
                                <li class="page-item " id="nextPage">
                                    <a style="cursor: pointer;" class="page-link ">Sau</a>
                                </li>
                            </ul>
                        </nav>
                        <!--//app-pagination-->

                    </div><!--//tab-pane-->


                </div><!--//tab-content-->


            </div><!--//container-fluid-->
        </div>


        <!--//Modal View-->
        <div class="modal fade" id="orderDetailModal" tabindex="-1" aria-labelledby="orderDetailModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="orderDetailModalLabel">Chi tiết hóa đơn</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="pdfExport">
                        <div class="card order-card">
                            <div id="orderDetailCardHead"
                                 style="display: flex; justify-content: space-between;align-items: center;"
                                 class="card-header">
                            </div>
                            <div class="card-body">
                                <div id="orderDetailCardBody">
                                </div>
                                <table style="text-align:center" class="table" id="orderTbody">
                                    <thead>
                                        <tr>
                                            <th>Ảnh</th>
                                            <th>Tên Sản Phẩm</th>
                                            <th>Số Lượng</th>
                                            <th>Thành Tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody id="orderTableBody">
                                        <!-- Lặp qua từng sản phẩm để tạo ra các hàng -->

                                    </tbody>
                                    <tfoot id="orderTableFoot">

                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button class="btn btn-primary" onclick="exportModalToPDF()">Xuất PDF</button>
                    </div>
                </div>
            </div>
        </div>

        <!--//Modal Edit-->
        <div class="modal fade" id="editOrderModal" tabindex="-1" aria-labelledby="editOrderModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Sửa hóa đơn</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="card order-card">
                            <div id="EditOrderCardHead"
                                 style="display: flex; justify-content: space-between;align-items: center;"
                                 class="card-header">

                            </div>
                            <div class="card-body">
                                <div id="EditOrderCardBody">

                                </div>

                                <table style="text-align:center" class="table" id="orderTbody">
                                    <thead>
                                        <tr>
                                            <th>Ảnh</th>
                                            <th>Tên Sản Phẩm</th>
                                            <th>Số Lượng</th>
                                            <th>Thành Tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody id="EditOrderTableBody">
                                        <!-- Lặp qua từng sản phẩm để tạo ra các hàng -->

                                    </tbody>
                                    <tfoot id="EditOrderTableFoot">

                                    </tfoot>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" id="EditOrderModelFooter">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>


        </div>

        <!--//Modal Delete-->
        <div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-labelledby="deleteOrderModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Xóa hóa đơn</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="card order-card">
                            <div id="DeleteOrderCardHead"
                                 style="display: flex; justify-content: space-between;align-items: center;"
                                 class="card-header">
                                <h4>Bạn có chắc chắc muốn xóa hóa đơn này không?</h4>
                            </div>
                            <div class="card-body">
                                <div id="DeleteOrderCardBody">

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" id="DeleteOrderModelFooter">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>


        </div>
    </div><!--//app-wrapper-->
    @{ var jsonHtml = Html.Raw(@Model); } <!-- Hiển thị dữ liệu và phân trang lọc -->
    <script type="text/javascript">
        document.getElementById("imgLoginUser").src = JSON.parse(localStorage.getItem('loginUser')).userAvatar;
        function convertToDate(date) {
                var day = ("0" + date.getDate()).slice(-2); // Add leading zero if needed
                var month = ("0" + (date.getMonth() + 1)).slice(-2); // Add leading zero if needed, month is 0-indexed
                var year = date.getFullYear();
                return day + '/' + month + '/' + year;
            }
            function convertToTime(date) {
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var ampm = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12;
                hours = hours ? hours : 12; // the hour '0' should be '12'
                minutes = minutes < 10 ? '0' + minutes : minutes;
                var strTime = hours + ':' + minutes + ' ' + ampm;
                return strTime;
            }
            function convertToDateTime(dateS) {
                console.log(dateS)
                var date = new Date(dateS)
                var day = ("0" + date.getDate()).slice(-2); // Add leading zero if needed
                var month = ("0" + (date.getMonth() + 1)).slice(-2); // Add leading zero if needed, month is 0-indexed
                var year = date.getFullYear();
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var ampm = hours >= 12 ? 'PM' : 'AM';
                hours = hours % 12;
                hours = hours ? hours : 12; // the hour '0' should be '12'
                minutes = minutes < 10 ? '0' + minutes : minutes;
                var strTime = hours + ':' + minutes + ' ' + ampm;
                return day + '/' + month + '/' + year + ' '+ strTime;
            }

            let orders = @jsonHtml
                    for (let i = 0; i < orders.length; i++)
                        orders[i].orderDate = new Date(parseInt(orders[i].orderDate.match(/\/Date\((\d+)\)\//)[1]))
                    console.log(orders)
        const paidOrders = orders.filter(order => order.paymentStatus === 'Đã thanh toán');
        paidOrders.sort((a, b) => new Date(b.orderDate) - new Date(a.orderDate));
        function formatDate(dateString) {
            const date = new Date(dateString);
            return [
                ('0' + date.getDate()).slice(-2),
                ('0' + (date.getMonth() + 1)).slice(-2),
                date.getFullYear(),
            ].join('-');
        } const modifiedOrders = paidOrders.map(order => ({
            orderId: order.orderId,
            numberTable: order.numberTable,
            userFullname: order.userFullname,
            paymentMethod: order.paymentMethod,
            orderDate: formatDate(order.orderDate), // Format date
            orderTotal: order.orderTotal.toLocaleString(
                "vi-VN",
                {
                    style: "currency",
                    currency: "VND",
                }) // Format currency
            // Remove orderDetails
        })).map(order => ({ // Translate to Vietnamese
            "Mã Đơn": order.orderId,
            "Số Bàn": order.numberTable,
            "Nhân Viên": order.userFullname,
            "Ngày Đặt": order.orderDate,
            "Phương Thức Thanh Toán": order.paymentMethod,
            "Tổng Tiền": order.orderTotal
        }));
        const totalOrders = modifiedOrders.length;
        const totalAmount = paidOrders.reduce((sum, order) => sum + order.orderTotal, 0);

        // Add a final row for the totals
        modifiedOrders.push({
            "Mã Đơn": '',
            "Số Bàn": '',
            "Nhân Viên": '',
            "Ngày Đặt": '',
            "Phương Thức Thanh Toán": 'Tổng hóa đơn',
            "Tổng Tiền": `${totalAmount.toLocaleString(
                "vi-VN",
                {
                    style: "currency",
                    currency: "VND",
                })}`
        });
        // Now, modifiedOrders is ready for export without the orderDetails field
        downloadExcel.addEventListener("click", async () => {
            const XLSX = await import("https://cdn.sheetjs.com/xlsx-0.19.2/package/xlsx.mjs");
            const worksheet = XLSX.utils.json_to_sheet(modifiedOrders);

            // Convert the modified orders to a worksheet
            const range = XLSX.utils.decode_range(worksheet['!ref']);

            // Add custom headers to the worksheet

            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, "Orders");

            // Write the workbook to a file
            XLSX.writeFile(workbook, "Orders.xlsx", {
                compression: true,
            });
        })


            const rowsPerPage = 25; // Số hàng mỗi trang
            let currentPage = 1; // Trang hiện tại
            let filterOrder = orders;
            let searchValue = '';
            let statusValue = 'All';
            document.getElementById('searchForm').addEventListener('submit', function (event) {
                event.preventDefault(); // Ngăn không cho trình duyệt gửi biểu mẫu
                setupPagination(orders, document.getElementById('pagination'))
                currentPage = 1;
                document.getElementById('orders-all-tab').click()
            });
            document.querySelector('.form-select').addEventListener('change', () => {
                currentPage = 1;
                setupPagination(orders, document.getElementById('pagination'))
            });
            function filterOrdersByStatus(status) {
                statusValue = status;
                currentPage = 1
                setupPagination(orders, document.getElementById('pagination'));
            }
            // Thêm sự kiện click cho từng tab
            document.getElementById('orders-all-tab').addEventListener('click', () => filterOrdersByStatus('All'));
            document.getElementById('orders-paid-tab').addEventListener('click', () => filterOrdersByStatus('Đã thanh toán'));
            document.getElementById('orders-pending-tab').addEventListener('click', () => filterOrdersByStatus('Đang chờ'));
            document.getElementById('orders-cancelled-tab').addEventListener('click', () => filterOrdersByStatus('Đã hủy'));

            function updatePaginationButtons(paginationElement, pageCount) {
                const previousButton = paginationElement.querySelector('#previousPage');
                const nextButton = paginationElement.querySelector('#nextPage');

                if (currentPage === 1) {
                    previousButton.classList.add('disabled');
                } else {
                    previousButton.classList.remove('disabled');
                }

                if (currentPage === pageCount || pageCount === 0) {
                    nextButton.classList.add('disabled');
                } else {
                    nextButton.classList.remove('disabled');
                }

            }
            function displayOrders(ordersData, page = 1) {
                const tableBody = document.getElementById('ordersTable').getElementsByTagName('tbody')[0];
                tableBody.innerHTML = ""; // Xóa dữ liệu hiện tại
                const start = (page - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                const paginatedItems = ordersData.slice(start, end);
                paginatedItems.forEach((order,index) => {
                    let statusClass = order.paymentStatus === 'Đã thanh toán' ? 'bg-success' : (order.paymentStatus === 'Đang chờ' ? 'bg-warning' : 'bg-danger')
                    let orderString = JSON.stringify(order).replace(/"/g, '&quot;');
                    let row =`
                        <tr>
                            <td class="cell">${index+1}</td>
                            <td class="cell">#${order.orderId}</td>
                            <td class="cell">
  ${order.orderStatus === 'Đơn mới' ? '<button>Đơn mới</button>' : ''}
</td>
                            <td class="cell"><a class="btn-sm app-btn-secondary" style="cursor:pointer" data-bs-toggle="modal" data-bs-target="#orderDetailModal" onclick="getDetail(${orderString})">Xem / Xuất</a></td>
                            <td class="cell">${order.numberTable}</td>
                            <td class="cell">${order.userFullname}</td>
                            <td class="cell"><span>${convertToDate(order.orderDate)}</span><span class="note">${convertToTime(order.orderDate)}</span></td>
                            <td class="cell"><span class="badge ${statusClass}">${order.paymentStatus}</span></td>
                            <td class="cell">${order.orderTotal.toLocaleString('vi-VN', {
                                style: 'currency',
                                currency: 'VND'
                            })}
                            </td>
                            <td class="cell">
                                <svg style="cursor:pointer;margin-right:2px" data-bs-toggle="modal" data-bs-target="#editOrderModal" onclick="getEditDetail(${orderString})" width="24px" height="24px" viewBox="0 0 25 25" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>edit_cover [#1481]</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="Page-1" stroke="#27c4b2" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="Dribbble-Light-Preview" transform="translate(-419.000000, -359.000000)" fill="#27c4b2"> <g id="icons" transform="translate(56.000000, 160.000000)"> <path d="M384,209.210475 L384,219 L363,219 L363,199.42095 L373.5,199.42095 L373.5,201.378855 L365.1,201.378855 L365.1,217.042095 L381.9,217.042095 L381.9,209.210475 L384,209.210475 Z M370.35,209.51395 L378.7731,201.64513 L380.4048,203.643172 L371.88195,212.147332 L370.35,212.147332 L370.35,209.51395 Z M368.25,214.105237 L372.7818,214.105237 L383.18415,203.64513 L378.8298,199 L368.25,208.687714 L368.25,214.105237 Z" id="edit_cover-[#1481]"> </path> </g> </g> </g> </g></svg>
                                <svg style="cursor:pointer" data-bs-toggle="modal" data-bs-target="#deleteOrderModal" width="24px" height="24px" viewBox="0 0 25 25" version="1.1" onclick="openDelete(${orderString})" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#fe4d4d"> <g id="Page-1" stroke="#fe4d4d" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <g id="Dribbble-Light-Preview" transform="translate(-179.000000, -360.000000)" fill="#fe4d4d"">
                                    <g id="icons" transform="translate(56.000000, 160.000000)" >
                                        <path d="M130.35,216 L132.45,216 L132.45,208 L130.35,208 L130.35,216 Z M134.55,216 L136.65,216 L136.65,208 L134.55,208 L134.55,216 Z M128.25,218 L138.75,218 L138.75,206 L128.25,206 L128.25,218 Z M130.35,204 L136.65,204 L136.65,202 L130.35,202 L130.35,204 Z M138.75,204 L138.75,200 L128.25,200 L128.25,204 L123,204 L123,206 L126.15,206 L126.15,220 L140.85,220 L140.85,206 L144,206 L144,204 L138.75,204 Z" id="delete-[#1487]">
                                                                            /path>
                                                      </g>
                                    </g>
                                </g>
                                </svg>
                         </tr>`
                    tableBody.innerHTML += row;
                });
                document.querySelectorAll('.pagination .page-item').forEach(item => {
                    item.classList.remove('active');
                });

                // Cập nhật trạng thái của nút 'Previous' và 'Next'
                updatePaginationButtons(document.getElementById('pagination'), Math.ceil(ordersData.length / rowsPerPage));
            }

            function setupPagination(ordersData, paginationElement, current = currentPage) {

                const selectedOption = document.querySelector('.form-select').value;
                const currentDate = new Date();
                // Time Filter
                switch (selectedOption) {
                    case 'option-2': // This Week
                        // Tìm ngày đầu tiên của tuần (Chủ Nhật)
                        const startOfWeek = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - currentDate.getDay()+1);
                        // Tìm ngày cuối cùng của tuần (Thứ Bảy)
                        const endOfWeek = new Date(startOfWeek.getFullYear(), startOfWeek.getMonth(), startOfWeek.getDate() + 7);

                        ordersData = ordersData.filter(order => {
                            const orderDate = new Date(order.orderDate);
                            // So sánh orderDate với startOfWeek và endOfWeek
                            return orderDate >= startOfWeek && orderDate <= endOfWeek;
                        });
                        break;
                    case 'option-3': // This Month
                        ordersData = ordersData.filter(order => {
                            const orderDate = new Date(order.orderDate);
                            return orderDate.getMonth() === currentDate.getMonth() &&
                                orderDate.getFullYear() === currentDate.getFullYear();
                        });
                        break;
                    case 'option-4': // This Year
                        ordersData = ordersData.filter(order => new Date(order.orderDate).getFullYear() === currentDate.getFullYear());
                        break;
                    default: // All
                        ordersData = [...ordersData];
                }
                function formatDateSort(dateString) {
                    const dateObject = new Date(dateString);

                    const year = dateObject.getFullYear();
                    const month = String(dateObject.getMonth() + 1).padStart(2, '0');
                    const day = String(dateObject.getDate()).padStart(2, '0');

                    return `${year}-${month}-${day}`;
                }
                // Sort Date
                ordersData.sort((a, b) => new Date(b.orderDate) - new Date(a.orderDate));
                let idValue = document.getElementById('order-id').value.trim();
                let employeeNameValue = document.getElementById('employee-name').value.trim().toUpperCase();
                let tableNumberValue = document.getElementById('table-number').value.trim();
                let orderDateValue = document.getElementById('order-date').value.trim();
                // Search Filter
                console.log(ordersData[0].orderDate, formatDateSort(ordersData[0].orderDate), orderDateValue)
                ordersData = ordersData.filter(order => order.orderId.toLocaleString().includes(idValue)
                    && order.userFullname.toUpperCase().includes(employeeNameValue)
                    && order.numberTable.toLocaleString().toUpperCase().includes(tableNumberValue)
                    && formatDateSort(order.orderDate).toUpperCase().includes(orderDateValue));
                // Search Filter

                // Payment status Filter
                if (statusValue !== 'All')
                    ordersData = ordersData.filter(order => order.paymentStatus === statusValue);

                while (paginationElement.children.length > 2) {
                    paginationElement.removeChild(paginationElement.children[1]);
                }
                filterOrder = ordersData;
                let pageCount = Math.ceil(ordersData.length / rowsPerPage);

                displayOrders(ordersData, current);

                let numPagesToShow = 3;
                let startPage = Math.max(current - numPagesToShow, 1);
                let endPage = Math.min(current + numPagesToShow, pageCount);

                // Add the first page and ellipsis if necessary
                if (startPage > 1) {
                    addPageButton(1);
                    if (startPage > 2) {
                        addEllipsis();
                    }
                }

                // Add individual page numbers
                for (let i = startPage; i <= endPage; i++) {
                    addPageButton(i);
                }

                // Add the last page and ellipsis if necessary
                if (endPage < pageCount) {
                    if (endPage < pageCount - 1) {
                        addEllipsis();
                    }
                    addPageButton(pageCount);
                }

                // Update the state of 'Previous' and 'Next' buttons

                function addPageButton(pageNum) {
                    let pageItem = document.createElement('li');
                    pageItem.classList.add('page-item', 'number');
                    if (pageNum === current) {
                        pageItem.classList.add('active');
                    }
                    pageItem.innerHTML = `<a class="page-link" href="#">${pageNum}</a>`;
                    pageItem.addEventListener('click', (event) => {
                        event.preventDefault();
                        currentPage = pageNum;
                        setupPagination(ordersData, paginationElement, pageNum);
                    });
                    paginationElement.insertBefore(pageItem, paginationElement.querySelector('#nextPage'));
                }

                function addEllipsis() {
                    let ellipsisItem = document.createElement('li');
                    ellipsisItem.classList.add('page-item');
                    ellipsisItem.innerHTML = `<span class="page-link">...</span>`;
                    paginationElement.insertBefore(ellipsisItem, paginationElement.querySelector('#nextPage'));
                }


            }

            document.getElementById('previousPage').addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    setupPagination(filterOrder, document.getElementById('pagination'));
                }
            });

            document.getElementById('nextPage').addEventListener('click', () => {
                if (currentPage * rowsPerPage < filterOrder.length) {
                    currentPage++;
                    setupPagination(filterOrder, document.getElementById('pagination'));
                }
            });

            window.onload = () => {
                setupPagination(orders, document.getElementById('pagination'));
            };
    </script>

    <!-- Authen + Modal -->
    <script>
        //Authenticate
        //Authenticate
        const user = JSON.parse(localStorage.getItem("loginUser"))
        if (!localStorage.getItem('loginUser'))
            window.location.href = '/admin/login'
        else if (JSON.parse(localStorage.getItem('loginUser')).roleName === 'Admin') {
            document.getElementById('user_nav').innerHTML = `
                                    <a class="nav-link " href="/admin/users" >
                                        <span class="nav-icon">
                                            <svg width="24px" height="24px" viewBox="0 0 24.00 24.00"  class="bi bi-card-list" fill="none"
                                                xmlns="http://www.w3.org/2000/svg">
                                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                                <g id="SVGRepo_iconCarrier">
                                                    <path d="M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z"
                                                        stroke="currentColor" stroke-width="1.392" stroke-linecap="round"
                                                        stroke-linejoin="round"></path>
                                                    <path d="M12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z"
                                                        stroke="currentColor" stroke-width="1.392" stroke-linecap="round"
                                                        stroke-linejoin="round"></path>
                                                </g>
                                            /svg>
                                        </span>
                                        <span class="nav-link-text">Người dùng</span>
                                    </a><!--//nav-link-->	`
        }


        //Hiển thị Modal Xem chi tiết
        function getDetail(orderS) {
            document.getElementById('orderDetailCardHead').innerHTML = `
                                     <h5 style="margin: 0;" class="card-title">Mã Hóa Đơn: #${orderS.orderId} </h5>
                                     <h6 style="margin: 0;" class="card-title">Ngày: ${convertToDateTime(orderS.orderDate)}</h6>
                                    `
            document.getElementById('orderDetailCardBody').innerHTML = `
                                      <p style="text-align: right;" class="card-text">Trạng Thái: ${orderS.paymentStatus}</p>
                                      <p style="text-align: right;" class="card-text">Phương Thức: ${orderS.paymentMethod}</p>
                                      <p style="text-align: right;" class="card-text">Số bàn: ${orderS.numberTable}</p>
                                      <p style="text-align: right;" class="card-text">Nhân Viên: ${orderS.userFullname}</p>
                                `
            const tableBody = document.getElementById('orderTableBody');
            tableBody.innerHTML = ''
            orderS.OrderDetails.forEach(order => {
                let row = `
                                        <tr valign='middle' >
                                            <td><img class="img-pdf" style="width:70px;height:70px;border-radius:20%;box-shadow:2px 2px 3px gray" src="${order.imgUrl}" alt="Product Image" class="product-img"></td>
                                                <td class="product-name">${order.productName}</td>
                                                <td>${order.quantity}</td>
                                                <td>${order.subTotal.toLocaleString('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                })}</td>
                                        </tr>`
                tableBody.innerHTML += row;
            });

            document.getElementById('orderTableFoot').innerHTML = `
                                            <tr>
                                                <th colspan="3" style="text-align: right;">Tổng Tiền</th>
                                                <th>${orderS.orderTotal.toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            })}</th>
                                            </tr>`

        }

        //Hiển thị Modal Edit Hóa đơn
        function getEditDetail(orderS) {
            document.getElementById('EditOrderCardHead').innerHTML = `
                                         <h5 style="margin: 0;" class="card-title">Mã Hóa Đơn: #${orderS.orderId}</h5>
                                         <h6 style="margin: 0;" class="card-title">Ngày: ${convertToDateTime(orderS.orderDate)}</h6>
                                    `
            if (orderS.userId !== user.userId && orderS.userId !== 1 && user.roleName !== 'Admin') {
                document.getElementById('EditOrderCardBody').innerHTML = `
                                          <p style="text-align: right;" class="card-text">Trạng Thái: ${orderS.paymentStatus}</p>
                                          <p style="text-align: right;" class="card-text">Phương Thức: ${orderS.paymentMethod}</p>
                                          <p style="text-align: right;" class="card-text">Số bàn: ${orderS.numberTable}</p>
                                          <p style="text-align: right;" class="card-text">Nhân Viên: ${orderS.userFullname}</p>
                                    `
                document.getElementById("EditOrderModelFooter").innerHTML = `
                                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                          `
            } else {
                let orderString = JSON.stringify(orderS).replace(/"/g, '&quot;');

                document.getElementById("EditOrderModelFooter").innerHTML = `
                                             <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                             <button type="button" class="btn btn-primary" onclick="handleEditOrder(${orderString})">Sửa hóa đơn</button>
                                       `
                document.getElementById('EditOrderCardBody').innerHTML =
                    `<div style="display: flex;align-items: center;justify-content: flex-end;">
                                            <p style="text-align: right;margin: 0 6px;" class="card-text">Trạng Thái: </p>
                                                <select name="paymentStatus" id="selPaymentStatus">
                                                    <option  value="Đang chờ">Đang chờ</option>
                                                    <option value="Đã thanh toán">Đã thanh toán</option>
                                                    <option value="Đã hủy">Đã hủy</option>
                                                </select>
                                        </div>
                                        <div style="margin: 18px 0px 10px;display: flex;align-items: center;justify-content: flex-end;">
                                            <p style="text-align: right;margin: 0px 6px;" class="card-text">Phương Thức: </p>
                                                <select name="paymentMethod" id="selPaymentMethod">
                                                    <option value="Tiền mặt">Tiền mặt</option>
                                                    <option value="Momo">Momo</option>
                                                    <option value="Thẻ tín dụng">Thẻ tín dụng</option>
                                                </select>
                                        </div>
                                        <p style="text-align: right;" class="card-text">Số bàn: ${orderS.numberTable}</p>
                                        <p style="text-align: right;" class="card-text">Nhân Viên: ${user.userFullname}</p>`

            }
            if (orderS.userId === user.userId) {
                document.getElementById('selPaymentStatus').value = orderS.paymentStatus;
                document.getElementById('selPaymentMethod').value = orderS.paymentMethod;
            }
            const tableBody = document.getElementById('EditOrderTableBody');
            tableBody.innerHTML = ''
            orderS.OrderDetails.forEach(order => {
                let row = `
                                                                                                                <tr valign='middle' >
                                                                                                                    <td><img style="width:70px;height:70px;border-radius:20%;box-shadow:2px 2px 3px gray" src="${order.imgUrl}" alt="Product Image" class="product-img"></td>
                                                                                                                    <td class="product-name">${order.productName}</td>
                                                                                                                    <td>${order.quantity}</td>
                                                                                                                    <td>${order.subTotal.toLocaleString('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                })}</td>
                                                                                                                </tr>`
                tableBody.innerHTML += row;
            });

            document.getElementById('EditOrderTableFoot').innerHTML = `
                                                                                                            <tr>
                                                                                                                <th colspan="3" style="text-align: right;">Tổng Tiền</th>
                                                                                                                <th>${orderS.orderTotal.toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            })}</th>
                                                                                                            </tr>
                                                                                                        `
        }

        // Hàm lưu edit hóa đơn lên server
        function handleEditOrder(params) {
            let editOrder = {

                paymentStatus: document.getElementById('selPaymentStatus').value,
                paymentMethod: document.getElementById('selPaymentMethod').value,
                userId: user.userId
            }
            fetch(`/admin/order/${params.orderId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(editOrder)
            })
                .then(response => {
                    if (response.ok) {
                        // Xử lý thành công (ví dụ: đóng modal)
                        alert("Sửa hóa đơn thành công!");

                    } else {
                        alert("Sửa hóa đơn không thành công!");
                    }
                    window.location.reload();
                })
                .catch(error => console.error("An error occurred:", error));
        }


        //Hiển thị Modal Xóa Hóa đơn
        function openDelete(orderS) {
            document.getElementById('DeleteOrderCardHead').innerHTML = `
                                                                                                            <h5 style="margin: 0;" class="card-title">Mã Hóa Đơn: #${orderS.orderId}</h5>
                                                                                                            <h6 style="margin: 0;" class="card-title">Ngày: ${convertToDateTime(orderS.orderDate)}</h6>
                                                                                                        `
            if (orderS.userId !== user.userId && orderS.userId !== "" && user.roleName !== 'Admin') {
                document.getElementById('DeleteOrderCardBody').innerHTML = `
                                                                                                            <p style="text-align: right;" class="card-text">Chỉ có Admin có thể xóa hóa đơn của người khác</p>
                                                                                                        `
                document.getElementById("DeleteOrderModelFooter").innerHTML = `
                                                                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                                                                            `
            } else {
                let orderString = JSON.stringify(orderS).replace(/"/g, '&quot;');

                document.getElementById("DeleteOrderModelFooter").innerHTML = `
                                                                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                                                                                <button type="button" class="btn btn-danger" onclick="handleDeleteOrder(${orderString})">Xóa hóa đơn</button>
                                                                                                            `
                document.getElementById('DeleteOrderCardBody').innerHTML = `<div style="display: flex;align-items: center;justify-content: flex-end;">
                                                                                                                <p style="text-align: right;" class="card-text">Bạn có chắc chắn muốn xóa hóa đơn này không?</p>`

            }

        }

        // Hàm lưu xóa hóa đơn lên server
        function handleDeleteOrder(params) {

            fetch(`/admin/order/${params.orderId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                },
            })
                .then(response => {
                    if (response.ok) {
                        // Xử lý thành công (ví dụ: đóng modal)
                        alert("Xóa hóa đơn thành công!");
                    } else {
                        alert("Xóa hóa đơn không thành công!");
                    }
                    window.location.reload()

                })
                .catch(error => console.error("An error occurred:", error));
        }</script>

    <script>
        function allImagesLoaded(element) {
            console.log(element.getElementsByTagName('img'))
            return Array.from(element.getElementsByTagName('img')).every(img => img.complete && img.naturalHeight !== 0);
        }

        function exportModalToPDF() {
            const element = document.getElementById('pdfExport'); // Select the modal element
            if (allImagesLoaded(element)) {
                // If all images are loaded, proceed with html2canvas
                html2canvas(element, {
                    logging: true, // Enable logging for debugging
                    useCORS: false, // Enable CORS for loading images from external sources
                    onclone: function (documentClone) {
                        // This is to handle any specific changes you need in the clone that html2canvas creates
                    }
                }).then(canvas => {
                    // Code to generate PDF
                    const imgData = canvas.toDataURL('image/png');
                    const pdf = new jspdf.jsPDF({
                        orientation: 'portrait',
                    });

                    // Adjust these values as necessary to fit your content
                    const imgWidth = 210; // Example width in mm
                    const pageHeight = 295;  // Example height in mm
                    let heightLeft = imgWidth * canvas.height / canvas.width;
                    let position = 0;

                    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, heightLeft);
                    pdf.save('order-details.pdf');
                });
            } else {
                console.error("Images not fully loaded. Waiting for images to load and trying again...");
                setTimeout(() => exportModalToPDF(), 5000); // Wait for 5 seconds and try again
            }
        }

// You can call exportModalToPDF() when you need to export the PDF

    </script>
    <!-- Javascript -->
    <script src="~/Content/assets/plugins/popper.min.js"></script>
    <script src="~/Content/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>


    <!-- Page Specific JS -->
    <script src="~/Content/assets/js/app.js"></script>

</body>

</html>
